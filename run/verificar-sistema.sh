#!/bin/bash

echo "üîç Verifica√ß√£o do Sistema Expo Analytics"
echo "========================================"

# Verificar backend
echo ""
echo "üì° Backend:"
if pgrep -f "php.*api-receiver.php" > /dev/null; then
    echo "‚úÖ Backend rodando"
else
    echo "‚ùå Backend n√£o est√° rodando"
    echo "   Para iniciar: cd backend && php -S localhost:8080 api-receiver.php"
fi

# Verificar FFmpeg
echo ""
echo "üé¨ FFmpeg:"
if which ffmpeg > /dev/null; then
    echo "‚úÖ FFmpeg instalado"
else
    echo "‚ùå FFmpeg n√£o encontrado"
    echo "   Para instalar: brew install ffmpeg"
fi

# Verificar configura√ß√£o do app
echo ""
echo "‚öôÔ∏è Configura√ß√£o do App:"
if curl -s "http://localhost:8080/app-config?bundleId=expo.modules.analytics.example" | grep -q '"recordScreen":true'; then
    echo "‚úÖ Record Screen ativado"
else
    echo "‚ùå Record Screen desativado ou backend offline"
fi

# Verificar integra√ß√£o geogr√°fica
echo ""
echo "üåç Integra√ß√£o Geogr√°fica:"
geo_response=$(curl -s -X POST "http://localhost:8080/init" -H "Content-Type: application/json" -d '{"userId":"test-verification","userData":{"test":true}}')
if echo "$geo_response" | grep -q '"flag"'; then
    flag=$(echo "$geo_response" | jq -r '.geo.flag // "‚ùì"')
    country=$(echo "$geo_response" | jq -r '.geo.country // "Unknown"')
    echo "‚úÖ Dados geogr√°ficos funcionando: $flag $country"
else
    echo "‚ùå Dados geogr√°ficos n√£o funcionando"
fi

# Verificar estrutura de dados
echo ""
echo "üìÇ Estrutura de Dados:"
for dir in "events" "videos" "users" "logs" "apps"; do
    if [ -d "backend/analytics-data/$dir" ]; then
        echo "‚úÖ $dir/"
    else
        echo "‚ùå $dir/ n√£o existe"
    fi
done

# Verificar logs recentes
echo ""
echo "üìù Logs Recentes:"
log_file="backend/analytics-data/logs/$(date +%Y-%m-%d).log"
if [ -f "$log_file" ]; then
    echo "‚úÖ Log de hoje existe"
    echo "   √öltimas 3 linhas:"
    tail -3 "$log_file" | sed 's/^/   /'
else
    echo "‚ùå Nenhum log de hoje"
fi

# Verificar eventos
echo ""
echo "üìä Eventos:"
event_count=$(find backend/analytics-data/events -name "*.jsonl" -exec wc -l {} \; 2>/dev/null | awk '{sum+=$1} END {print sum+0}')
echo "‚úÖ $event_count eventos salvos"

# Verificar v√≠deos
echo ""
echo "üé• V√≠deos:"
video_count=$(find backend/analytics-data/videos -name "*.mp4" 2>/dev/null | wc -l)
echo "‚úÖ $video_count v√≠deos gerados"

# Status geral
echo ""
echo "üéØ Status Geral:"
if pgrep -f "php.*api-receiver.php" > /dev/null && which ffmpeg > /dev/null; then
    echo "‚úÖ Sistema pronto para uso"
    echo ""
    echo "üì± Para testar:"
    echo "   1. cd example && npx expo run:ios"
    echo "   2. Clique em 'Iniciar Analytics'"
    echo "   3. Aguarde alguns segundos"
    echo "   4. Clique em 'Parar Analytics'"
    echo "   5. Verifique os logs: tail -20 $log_file"
else
    echo "‚ùå Sistema n√£o est√° completamente configurado"
fi

echo ""
echo "========================================" 